#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6
#define ARROW   7
#define ZMK_POINTING_DEFAULT_SCRL_VAL 1 // Default=10, lower is slower

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&msc {
    acceleration-exponent = <0>;
    time-to-max-speed-ms = <500>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph

    combos {
        compatible = "zmk,combos";
        combo_zx_scroll {
            timeout-ms = <100>;
            key-positions = <20 21>; // Z and X keys
            bindings = <&mo SCROLL>;
            layers = <0 4>;
            slow-release; // Only release when both keys are released
        };
    };

    behaviors {
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q       &kp W       &kp E        &kp R        &kp T                                    &kp Y        &kp U        &kp I        &kp O       &kp P
&mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G                                    &kp H        &mt LSHFT J  &mt LCTRL K  &mt LALT L  &mt LGUI SQT
&lt 4 Z     &kp X       &kp C        &kp V        &kp B                                    &kp N        &kp M        &kp COMMA    &kp DOT     &lt 4 SLASH
&kp GLOBE   &none       &none        &kp ESC      &lt 7 BACKSPACE  &lt 3 TAB               &lt 2 ENTER  &lt 1 SPACE                           &none
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET                    &none   &none      &none      &none     &none
&kp SEMI          &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL                            &none   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
&kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH                        &none   &none      &none      &none     &none
&none             &none         &none         &kp PERIOD    &kp NUMBER_0   &kp MINUS             &none  &trans                           &none
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp LS(LEFT_BRACKET)  &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(RIGHT_BRACKET)                         &none  &none      &none      &none     &none
&kp LS(SEMI)          &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)  &kp LS(EQUAL)                                 &none  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
&kp LS(GRAVE)         &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(BACKSLASH)                             &none  &none      &none      &none     &none
&none                 &none             &none             &kp LS(PERIOD)    &kp LS(NUMBER_0)       &kp LS(MINUS)  &trans  &none                                  &none
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none     &none     &none      &none      &none                 &kp PRINTSCREEN  &kp F7  &kp F8  &kp F9  &kp F12
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                 &kp SCROLLLOCK   &kp F4  &kp F5  &kp F6  &kp F11
&none     &none     &none      &none      &none                 &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F10
&none     &none     &none      &none     &trans  &trans  &trans  &trans                                    &none
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &none   &none   &none      &none                            &none      &none     &none          &none        &kp DEL
&trans  &trans  &trans  &trans     &none                            &kp CAPS   &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT
&trans  &none   &none   &mkp RCLK  &none                            &kp INS    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END
&none   &none   &none   &mkp RCLK  &mkp LCLK  &mkp MCLK             &mkp RCLK  &mkp LCLK                             &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&to 0     &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans    &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans    &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&to 0     &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
            
            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &bootloader                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                       &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans  &trans  &trans                          &trans
            >;
        };

        arrow_layer {
            label = "ARROW";
            bindings = <
&trans    &trans    &trans     &trans     &none                  &trans    &trans    &trans     &trans     &trans
&kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans                 &kp CAPS  &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT
&trans    &trans    &trans     &trans     &trans                 &kp INS   &kp HOME  &kp PG_DN  &kp PG_UP  &kp END
&trans    &trans    &trans     &trans      &trans  &trans  &trans  &trans                                    &trans
            >;
        };
    };
};
